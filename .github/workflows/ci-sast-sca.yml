name: CI - SAST + SCA

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Manual trigger - Executar manualmente na aba do Github "Actions"

jobs:
  sast-sca:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout código
        uses: actions/checkout@v4

        # Com submódulos e histórico completo (necessário para algumas análises)
      - name: Print working directory and tree
        run: |
          pwd
          ls -la
          echo "Directory tree:"
          ls -la Sprint3-CSHARP || true

      # 2. Setup .NET (para garantir build da solução)
      - name: Instalar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      # 2.1 Restore da solução (necessário para algumas análises)
      - name: Restore
        run: dotnet restore Sprint3-CSHARP/Sprint.sln

      # 3. Build da solução (necessário para algumas análises)
      - name: Build solution
        run: dotnet build Sprint3-CSHARP/Sprint.sln --configuration Release --no-restore

      # ------------------------
      # SAST - Semgrep
      - name: Instalar Semgrep
        run: pip install semgrep

      - name: Rodar análise SAST
        run: |
          semgrep --config auto \
                  --config ./ci/semgrep-rules/custom-rule.yml \
                  Sprint3-CSHARP/ \
                  --json > docs/sast-report.json

      # ------------------------
      # SCA - Dependency Check
      - name: Instalar Dependency-Check
        run: |
          curl -L https://github.com/jeremylong/DependencyCheck/releases/download/v10.0.2/dependency-check-10.0.2-release.zip -o depcheck.zip
          unzip depcheck.zip -d depcheck

      # 5. Rodar SCA com OWASP Dependency-Check via Docker
      - name: Run Dependency-Check (SCA)
        run: |
          docker run --rm -v $(pwd):/src owasp/dependency-check:latest \
            --project "Sprint3-CSHARP" \
            --scan /src/Sprint3-CSHARP \
            --format HTML \
            --out /src/docs/dependency-check-report.html

      # 6. Upload dos relatórios como artefatos
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: sast-sca-reports
          path: docs/
          if-no-files-found: warn
          retention-days: 7